variables:
  WEB_LINK: "http://${WEB_URL}:8888"
  PACKAGE_COMMAND: pnpm install
  RUN_COMMAND: pnpm build:test
  PRO_RUN_COMMAND: pnpm build:pro
  NGINX_PATH: /exchange-admin/wwwroot/
  PROJECT_NAME: exchange-admin
  WEB_HOOK: https://open.larksuite.com/open-apis/bot/v2/hook/30267c8f-7f6d-4293-abc7-07362f801c82
  NODE_IMAGE: node:18.18.2

stages:
  - build
  - test
  - deploy

cache:
  paths:
    - node_modules/

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == "main") || ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == "release")

send-lark-merge-request:
  stage: build
  image: $NODE_IMAGE
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-9 --activate
    - pnpm config set store-dir .pnpm-store
    - pnpm config set registry https://registry.npm.taobao.org
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "release"
  tags:
  tags:
    - web
  script:
    - |
      $PACKAGE_COMMAND
      $RUN_COMMAND
      echo "$(curl -X POST -H "Content-Type: application/json" \
          -d "{\"msg_type\":\"text\",\"content\":{\"text\":\"Actor: ${GITLAB_USER_NAME}\nProject: ${CI_PROJECT_NAME}\nCommitMsg: ${CI_COMMIT_TITLE}\nPr: ${CI_MERGE_REQUEST_PROJECT_URL}/-/merge_requests/${CI_MERGE_REQUEST_IID}\nPlatform: web\n\"}}" \
          ${WEB_HOOK})" > sendResult.json
      cat sendResult.json

test-stage:
  stage: test
  image: $NODE_IMAGE
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-9 --activate
    - pnpm config set store-dir .pnpm-store
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == "main"
  tags:
    - web
  script:
    - |
      $PACKAGE_COMMAND
      $RUN_COMMAND
      sed -i 's/deb.debian.org/mirrors.ustc.edu.cn/g' /etc/apt/sources.list.d/debian.sources
      apt-get update -qq && apt-get install -y -qq lftp
      lftp -c "set ftp:ssl-allow false; set ftp:ignore-pasv-address true; set ftp:prefer-epsv no; set ftp:charset gbk; set file:charset utf-8; debug; open -u $USERNAME,$PASSWORD $HOST; mirror -R dist/ $NGINX_PATH --verbose -p --ignore-time --transfer-all --parallel=5 --exclude-glob .git* --exclude .git/"
      echo "$(curl -X POST -H "Content-Type: application/json" \
          -d "{\"msg_type\":\"text\",\"content\":{\"text\":\"Project: ${CI_PROJECT_NAME}测试环境\nEvent:更新main分支\nActor: ${GITLAB_USER_NAME}\nCommitMsg: ${CI_COMMIT_TITLE}\n测试地址: ${WEB_LINK}\nPlatform: web\n\"}}" \
          ${WEB_HOOK})" > sendResult.json
      cat sendResult.json
  artifacts:
    expire_in: 3 day
    paths:
      - dist
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store

deploy-stage:
  stage: deploy
  image: $NODE_IMAGE
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-9 --activate
    - pnpm config set store-dir .pnpm-store
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == "release"
  tags:
    - web
  script:
    - |
      $PACKAGE_COMMAND
      $PRO_RUN_COMMAND
      sed -i 's/deb.debian.org/mirrors.ustc.edu.cn/g' /etc/apt/sources.list.d/debian.sources
      apt-get update -qq && apt-get install -y -qq lftp zip
      zip -q -r dist/${CI_PROJECT_NAME}-frond.zip dist/
      lftp -c "set ftp:ssl-allow false; set ftp:ignore-pasv-address true; set ftp:prefer-epsv no; set ftp:charset gbk; set file:charset utf-8; debug; open -u $USERNAME,$PASSWORD $HOST; put -O $NGINX_PATH dist/${CI_PROJECT_NAME}-frond.zip"
      echo "$(curl -X POST -H "Content-Type: application/json" \
          -d "{\"msg_type\":\"text\",\"content\":{\"text\":\"Project: ${CI_PROJECT_NAME}\nEvent:更新Release分支\nActor: ${GITLAB_USER_NAME}\nCommitMsg: ${CI_COMMIT_TITLE}\n下载地址: ${WEB_LINK}/${CI_PROJECT_NAME}-frond.zip\nPlatform: web\n\"}}" \
          ${WEB_HOOK})" > sendResult.json
      cat sendResult.json
  artifacts:
    expire_in: 3 day
    paths:
      - dist
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store
